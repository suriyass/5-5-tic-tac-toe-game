from __future__ import print_function 
from IPython.display import clear_output
def display_board(board):
    
    clear_output()
    print('   |   |   |   |')
    print(' ' + board[21] + ' | ' + board[22] + ' | ' + board[23] + ' | ' + board[24] + ' | ' + board[25])
    print('   |   |   |   |')
    print('-------------------')
    print('   |   |   |   |')
    print(' ' + board[16] + ' | ' + board[17] + ' | ' + board[18] + ' | ' + board[19] + ' | ' + board[20])
    print('   |   |   |   |')
    print('-------------------')
    print('   |   |   |   |')
    print(' ' + board[11] + ' | ' + board[12] + ' | ' + board[13] + ' | ' + board[14] + ' | ' + board[15])
    print('   |   |   |   |')
    print('-------------------')
    print('   |   |   |   |')
    print(' ' + board[6] + ' | ' + board[7] + ' | ' + board[8] + ' | ' + board[9] + ' | ' + board[10])
    print('   |   |   |   |')
    print('--------------------')
    print('   |   |   |   |')
    print(' ' + board[1] + ' | ' + board[2] + ' | ' + board[3] + ' | ' + board[4] + ' | ' + board[5])
    print('   |   |   |   |')
    
    

def player_input():
    
    marker = ''
    while not (marker == 'X' or marker == 'O'):
        marker = input('Player 1: choose:X or O?').upper()

    if marker == 'X':
        return ('X', 'O')
    else:
        return ('O', 'X')
    

def place_marker(board, marker, position):
    board[position] = marker
    


def win_check(board,mark):
   
     return ((board[1] == mark and board [2] == mark and board[3] == mark and board[4] == mark and board[5] ==  mark) or
     (board[6] == mark and board [7] == mark and board[8] == mark and board[9] == mark and board[10] ==  mark) or
     (board[11] == mark and board [12] == mark and board[13] == mark and board[14] == mark and board[15] ==  mark)or
     (board[16] == mark and board [17] == mark and board[18] == mark and board[19] == mark and board[20] ==  mark)or
     (board[21] == mark and board [22] == mark and board[23] == mark and board[24] == mark and board[25] ==  mark)or
     (board[1] == mark and board [6] == mark and board[11] == mark and board[16] == mark and board[21] ==  mark)or
     (board[2] == mark and board [7] == mark and board[12] == mark and board[17] == mark and board[22] ==  mark)or
     (board[3] == mark and board [8] == mark and board[13] == mark and board[18] == mark and board[23] ==  mark)or
     (board[4] == mark and board [9] == mark and board[14] == mark and board[19] == mark and board[24] ==  mark)or
     (board[5] == mark and board [10] == mark and board[15] == mark and board[20] == mark and board[25] ==  mark)or
     (board[1] == mark and board [7] == mark and board[13] == mark and board[19] == mark and board[25] ==  mark)or
     (board[5] == mark and board [9] == mark and board[13] == mark and board[17] == mark and board[21] ==  mark))


import random
def choose_first():
    if random.randint(0, 1) == 0:
        return 'Player 2'
    else:
        return 'Player 1'
    


def space_check(board, position):
    
    return board[position] == ' '



def full_board_check(board):
    for i in range(1,26):
        if space_check(board, i):
            return False
    return True



def player_choice(board):
    # Using strings because of input
    position = ' '
    while position not in '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25'.split() or not space_check(board, int(position)):
        
        position = input('select the next move: (1-25) ')
    return int(position)



def replay():
    
    return input('One more game:yes?orno?').lower().startswith('y')




print('TIC TAC TOE!')

while True:
    # Reset` the board
    theBoard = [' '] * 26
    player1_marker, player2_marker = player_input()
    turn = choose_first()
    print(turn + ' will go first.')
    
    play_game = input('Ready ? y or n?')

    if play_game.lower() == 'y':
        game_on = True
    else :
        game_on = False

    while game_on:
        if turn == 'Player 1':
            # Player1's turn.
            
            display_board(theBoard)
            position = player_choice(theBoard)
            place_marker(theBoard, player1_marker, position)

            if win_check(theBoard, player1_marker):
                display_board(theBoard)
                print('Congratulations! You have won the game!')
                game_on = False
            else:
                if full_board_check(theBoard):
                    display_board(theBoard)
                    print('Draw match!')
                    break
                else:
                    turn = 'Player 2'

        else:
            # Player2's turn.
            
            display_board(theBoard)
            position = player_choice(theBoard)
            place_marker(theBoard, player2_marker, position)

            if win_check(theBoard, player2_marker):
                display_board(theBoard)
                print('Player 2 has won!')
                game_on = False
            else:
                if full_board_check(theBoard):
                    display_board(theBoard)
                    print('It's a Tie!')
                    break
                else:
                    turn = 'Player 1'

    if not replay():
        break
